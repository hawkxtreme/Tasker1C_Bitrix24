   
#Область Команды

&НаКлиенте
Процедура Команда_ПолучитьДанные(Команда)
	ПолучитьДанныеНаКлиенте();
КонецПроцедуры

#КонецОбласти   

#Область Заполнение

&НаКлиенте
Процедура ПолучитьДанныеНаКлиенте()
	
	ОчиститьСообщения();
	Результат = ПолучитьДанныеНаСервере();  
	
	Если Результат <> Неопределено Тогда 
		Сообщить("Успешное подключение");
		ЗаполнитьДанныеНаКлиенте();
	Иначе 
		Сообщить("Не удалось подключиться");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанныеНаКлиенте()
	ЗаполнитьДанныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеНаСервере()
	
	ПараметрыПодключения 	= Справочники.b24_СайтИнтеграции.ПолучитьПараметрыПодключения(Объект.Сайт);
	
	//Задачи_ВсеДоступныеПоля
	СтруктураДоступныеПоля 	= b24_API.Задачи_ВсеДоступныеПоля(ПараметрыПодключения);
	
	Если СтруктураДоступныеПоля <> Неопределено Тогда 
		ЗаполнитьТаблицуНаФормеНаСервере(СтруктураДоступныеПоля.fields, "ДоступныеПоля");
	Иначе 
		Сообщить("Не удалось получить данные - Задачи_ВсеДоступныеПоля");	
	КонецЕсли;
	
	//Задачи_ПользовательскиеПоля
	СтруктураПользовательскиеПоля = b24_API.Задачи_ПользовательскиеПоля(ПараметрыПодключения);
	
	Если СтруктураПользовательскиеПоля <> Неопределено Тогда 
		ЗаполнитьТаблицуНаФормеНаСервере(СтруктураПользовательскиеПоля.result, "ПользовательскиеПоля");
	Иначе 
		Сообщить("Не удалось получить данные - Задачи_ПользовательскиеПоля");	
	КонецЕсли;
	
	//Задачи_ВсеЗадачи 
	Если ЗагружатьЗадачи Тогда 
		
		СтруктураВсеЗадачи 		= b24_API.Задачи_ВсеЗадачи(ПараметрыПодключения);
		
		Если СтруктураВсеЗадачи <> Неопределено Тогда 
			ЗаполнитьТаблицуНаФормеНаСервере(СтруктураВсеЗадачи.tasks, "ВсеЗадачи");
		Иначе 
			Сообщить("Не удалось получить данные - Задачи_ВсеЗадачи");	
		КонецЕсли;
	КонецЕсли;
	
	//Пользователи_ВсеПользователи  
	Если ЗагружатьПользователей Тогда 
		
		СтруктураВсеПользователи	= b24_API.Пользователи_ВсеПользователи(ПараметрыПодключения);
		
		Если СтруктураВсеПользователи <> Неопределено Тогда 
			ЗаполнитьТаблицуНаФормеНаСервере(СтруктураВсеПользователи.result, "ВсеПользователи");
		Иначе 
			Сообщить("Не удалось получить данные - Пользователи_ВсеПользователи");	
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеНаСервере()
	
	ПараметрыПодключения = Справочники.b24_СайтИнтеграции.ПолучитьПараметрыПодключения(Объект.Сайт);
	Возврат b24_API.Получить_ИнформацияОПриложении(ПараметрыПодключения);
	
КонецФункции

#КонецОбласти   
   
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицуНаФормеНаСервере(Таблица, ИмяТаблицы)
	
	ИзменитьНеСериализуемыеКолонкиНаСервере(Таблица);
	
	ЭтаФорма[ИмяТаблицы].Очистить();
	
	//удалить элементы
	УдаляемыеРеквизиты 			= Новый Массив;
	ОписаниеДетализацииТаблицы 	= ОписаниеДетализации.НайтиСтроки(Новый Структура("ИмяТаблицы", ИмяТаблицы));
	
	Для Каждого Строка Из ОписаниеДетализацииТаблицы Цикл 
		
		РеквизитФормы   = Новый РеквизитФормы(Строка.Имя, Строка.Тип, ИмяТаблицы);
		
		УдаляемыеРеквизиты.Добавить(СтрШаблон("%1.%2", ИмяТаблицы, Строка.Имя));
		
		Элементы.Удалить(Элементы[СтрШаблон("%1%2", ИмяТаблицы, Строка.Имя)]);
		
		ОписаниеДетализации.Удалить(Строка);
		
	КонецЦикла;
	
	//создание колонок реквизитов
	ДобавляемыеРеквизиты = Новый Массив;
	
	Для Каждого Колонка Из Таблица.Колонки Цикл
		
		РеквизитФормы           = Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, ИмяТаблицы);
		
		НоваяСтрока             = ОписаниеДетализации.Добавить();
		НоваяСтрока.Имя         = РеквизитФормы.Имя;
		НоваяСтрока.Тип         = РеквизитФормы.ТипЗначения;
		НоваяСтрока.ИмяТаблицы  = ИмяТаблицы;
		
		ДобавляемыеРеквизиты.Добавить(РеквизитФормы);
		
	КонецЦикла;
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты, УдаляемыеРеквизиты); 
	
	//создание колонок элементов
	Для Каждого Колонка Из Таблица.Колонки Цикл
		
		НовыйЭлемент                = Элементы.Добавить(СтрШаблон("%1%2", ИмяТаблицы, Колонка.Имя), Тип("ПолеФормы"), Элементы[ИмяТаблицы]);       
		НовыйЭлемент.Вид            = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным    = СтрШаблон("%1.%2", ИмяТаблицы, Колонка.Имя);
		
		Отбор						= Новый Структура("ИмяТаблицы, Имя", ИмяТаблицы, Колонка.Имя);
		ИскомыеСтроки				= ОписаниеДетализации.НайтиСтроки(Отбор);
		
		Если ИскомыеСтроки.Количество() > 0 Тогда 
			ИскомыеСтроки[0].ПутьКДанным     = НовыйЭлемент.ПутьКДанным;
		КонецЕсли;  
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Таблица, ИмяТаблицы);
        
КонецПроцедуры 

&НаСервере
Функция ЭтоНеСериализуемаяКолонкаНаСервере(Колонка)

	Результат = Ложь;
	
	Если Колонка.ТипЗначения.Типы().Найти(Тип("Соответствие")) <> Неопределено
		Или Колонка.ТипЗначения.Типы().Найти(Тип("Массив")) <> Неопределено Тогда 
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат
	
КонецФункции  

&НаСервере
Процедура ИзменитьНеСериализуемыеКолонкиНаСервере(Таблица)
	
	МассивУдаление = Новый Массив;
	
	Для Каждого Колонка Из Таблица.Колонки Цикл
		
		Если ЭтоНеСериализуемаяКолонкаНаСервере(Колонка) Тогда 
			МассивУдаление.Добавить(Колонка);
		КонецЕсли; 
	КонецЦикла;
	
	Для Каждого УдаляемаяКолонка Из МассивУдаление Цикл
    	Таблица.Колонки.Удалить(УдаляемаяКолонка);
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти   
